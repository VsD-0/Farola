@page "/"

@using Farola.API
@using Farola.Domain.Models
@using Farola.Infrastructure.Handlers
@using System.IdentityModel.Tokens.Jwt
@inject IProfessionalClient ProfessionalAPI
@inject NavigationManager Navigation

<!--Домашняя страница-->
<FluentLayout Id="home-page" 
              Style="padding: 10px 20px 10px 10px">
    <!--Блок основной информации о сайте-->
    <FluentGrid id="main" Style="margin: 3px 3px 15px 3px">
        <!--Название сайта-->
        <FluentGridItem Id="main-title" xxl="12" xl="12" lg="12" md="12" sm="12" xs="12">
            <FluentLabel Id="title-site" Typo="Typography.H1" Alignment="HorizontalAlignment.Center" Weight="FontWeight.Bold" >
                Farola
            </FluentLabel>
        </FluentGridItem>
        <!--Подназвание сайта-->
        <FluentGridItem xxl="12" xl="12" lg="12" md="12" sm="12" xs="12">
            <FluentLabel Id="subtitle-site" Typo="Typography.H3" Alignment="HorizontalAlignment.Center" Weight="FontWeight.Bold">
                Сервис поиска специалистов
            </FluentLabel>
        </FluentGridItem >
        <!--Краткое описание сайта-->
        <FluentGridItem xxl="12" xl="12" lg="12" md="12" sm="12" xs="12">
            <FluentLabel Id="description-site" Typo="Typography.Body" Alignment="HorizontalAlignment.Center" Weight="FontWeight.Normal" >
                Здесь будет описание сайта, пока что здесь текст "заглушка"
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consequat in sapien nec mollis. 
                Aliquam ullamcorper nisi nisi, sed finibus purus finibus et. Duis accumsan mauris vel velit sagittis, 
                vitae dapibus est ultricies. Pellentesque accumsan turpis sed nisl efficitur, eget eleifend enim feugiat. 
                Suspendisse potenti. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis 
                egestas. Vivamus cursus diam diam, nec pharetra risus eleifend in. Maecenas at eros non nisl rhoncus 
                euismod vitae at ex. Praesent placerat, ligula et placerat porttitor, urna quam varius est, vel varius 
                neque nunc tincidunt augue. Sed ultricies justo eget dapibus viverra. Praesent eu tellus fringilla, 
                tincidunt augue ac, ornare augue. Nunc a maximus lorem. Maecenas sem sapien, pulvinar vel eleifend a, 
                dapibus in ante. Quisque vitae nunc porttitor, aliquam tortor ac, tempus dolor. Phasellus consequat 
                dictum nibh, vel ultrices nisi mollis eu.
            </FluentLabel>
        </FluentGridItem>
    </FluentGrid>

    <!--Поиск по профессии-->
    <FluentGrid Id="search-container" Justify="JustifyContent.Center" Style="margin: 3px 3px 15px 3px">
        <FluentGridItem Id="search-space" xxl="4" xl="2" lg="2" md="1" sm="2" xs="0"/>
        <FluentGridItem Id="search-field" xxl="4" xl="8" lg="8" md="10" sm="8" xs="12">
            <FluentSearch Id="search-by-profession" Name="profession" @bind-Value="@search" Placeholder="Введите необходимого специалиста"
                          Appearance="FluentInputAppearance.Outline" AriaLabel="Текстовое поле, введите необходимого специалиста" Autofocus="true" 
                          DisplayName="Профессия" Maxlength="100" Minlength="1" Spellcheck="true" Style="width: 100%; font-size: 15pt"/>
        </FluentGridItem> 
        <FluentGridItem Id="search-btn" xxl="4" xl="2" lg="2" md="1" sm="2" xs="12" Justify="JustifyContent.Center">
            <FluentButton Id="btn-search" Appearance="Appearance.Accent" Style="width: 50%" OnClick="Search">Найти</FluentButton>
        </FluentGridItem>
    </FluentGrid>
    <!--Карточки специализаций-->
    <FluentGrid AdaptiveRendering="true" Justify="JustifyContent.SpaceAround" Style="width: 100%">
        @if(specstats != null)
        {
            @if(specstats.Count > 0)
            {
                @foreach (var item in specstats)
                {
                    <FluentGridItem xxl="2" xl="2" lg="3" md="4" sm="6" xs="12" Justify="JustifyContent.Center">
                        <FluentCard Width="290px" Height="210px" AreaRestricted="true" Style="padding: 3px 3px 3px 3px">
                            <FluentGrid Style="height: 210px">
                                <FluentGridItem xxl="12" xl="12" lg="12" md="12" sm="12" xs="12" Style="height: 100%;" Justify="JustifyContent.Center">
                                    <FluentNavLink Href="@($"/professional/{item.Spec.Id}/search")" IconColor="Color.Accent" Tooltip="@item.Spec.Name" Style="height: 210px; font-size: 1.8em; align-content:center">@item.Spec.Name</FluentNavLink>
                                </FluentGridItem>
                            </FluentGrid>
                        </FluentCard>
                    </FluentGridItem>
                }
            }
            else
            {
                <FluentLabel>Специализации отсутствуют</FluentLabel>
            }
        }
        else
        {
            <FluentProgressRing/>
        }
    </FluentGrid>
    <!--Отзывы лучших специалистов-->

</FluentLayout>

@code {
    private string? search;
    private List<SpecStat> specstats;
    private string? role = "2";
    private string? clientId = "0";

    private int rows;
    private int columns = 3;

    protected override async Task OnInitializedAsync()
    {
        specstats = (await ProfessionalAPI.GetSpecStats()).ToList<SpecStat>();

        rows = specstats.Count % 3 == 0 ? specstats.Count / 3 : specstats.Count / 3 + 1;

        if (TokenStorage.Token is not null)
        {
            var tokenHandler = new JwtSecurityTokenHandler();

            // Получение токена
            var jwtToken = tokenHandler.ReadJwtToken(TokenStorage.Token);

            // Получение роли из токена
            var roleClaim = jwtToken.Claims.FirstOrDefault(claim => claim.Type == "role");
            role = roleClaim is not null ? roleClaim.Value : "2";

            var idClaim = jwtToken.Claims.FirstOrDefault(claim => claim.Type == "nameid");
            clientId = idClaim is not null ? idClaim.Value : "0";

        }
    }

    private async void Search()
    {
        Navigation.NavigateTo($"/professional/all/{search}");
    }

    private async void Stats()
    {
        Navigation.NavigateTo($"/statements/{clientId}");
    }

}
